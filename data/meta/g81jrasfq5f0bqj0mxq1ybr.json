{"id":"g81jrasfq5f0bqj0mxq1ybr","title":"Design and Analysis of Algorithms","desc":"","updated":1689756013506,"created":1660838818693,"custom":{},"fname":"engineering.MIT.Design and Analysis of Algorithms","type":"note","vault":{"fsPath":"vault"},"contentHash":"5b126f3834f7f52e1fe84dadf4aa5c3b","links":[{"type":"wiki","from":{"fname":"engineering.MIT.Design and Analysis of Algorithms","id":"g81jrasfq5f0bqj0mxq1ybr","vaultName":"vault"},"value":"engineering.MIT.Introduction to algorithms","position":{"start":{"line":499,"column":15,"offset":21330},"end":{"line":499,"column":61,"offset":21376},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"engineering.MIT.Introduction to algorithms"}},{"type":"wiki","from":{"fname":"engineering.MIT.Design and Analysis of Algorithms","id":"g81jrasfq5f0bqj0mxq1ybr","vaultName":"vault"},"value":"tags.TODO","alias":"#TODO","position":{"start":{"line":566,"column":1,"offset":24640},"end":{"line":566,"column":6,"offset":24645},"indent":[]},"xvault":false,"to":{"fname":"tags.TODO"}}],"anchors":{"mit-6046":{"type":"header","text":"MIT 6.046","value":"mit-6046","line":7,"column":0,"depth":1},"lecture-1-interval-scheduling":{"type":"header","text":"Lecture 1. Interval Scheduling","value":"lecture-1-interval-scheduling","line":25,"column":0,"depth":1},"lecture-2-divide--conquer-convex-hull-median-finding":{"type":"header","text":"Lecture 2. Divide & Conquer: Convex Hull, Median Finding","value":"lecture-2-divide--conquer-convex-hull-median-finding","line":165,"column":0,"depth":1},"lecture-3-divide--conquer-fast-fourier-transform":{"type":"header","text":"Lecture 3. Divide & Conquer: Fast Fourier Transform","value":"lecture-3-divide--conquer-fast-fourier-transform","line":223,"column":0,"depth":1},"lecture-4-divide--conquer-van-emde-boas-trees":{"type":"header","text":"Lecture 4. Divide & Conquer: van Emde Boas Trees","value":"lecture-4-divide--conquer-van-emde-boas-trees","line":297,"column":0,"depth":1},"lecture-5-amortization":{"type":"header","text":"Lecture 5: Amortization","value":"lecture-5-amortization","line":340,"column":0,"depth":1},"lecture-6-randomized-algorithms":{"type":"header","text":"Lecture 6: Randomized Algorithms","value":"lecture-6-randomized-algorithms","line":391,"column":0,"depth":1},"lecture-7-randomization-skip-lists":{"type":"header","text":"Lecture 7 Randomization: Skip Lists","value":"lecture-7-randomization-skip-lists","line":439,"column":0,"depth":1},"lecture-8-randomization-universal--perfect-hashing":{"type":"header","text":"Lecture 8: Randomization: Universal & Perfect Hashing","value":"lecture-8-randomization-universal--perfect-hashing","line":492,"column":0,"depth":1},"lecture-9-augmentation-range-trees":{"type":"header","text":"Lecture 9: Augmentation. Range Trees","value":"lecture-9-augmentation-range-trees","line":548,"column":0,"depth":1},"lecture-10-dynamic-programming-advanced-dp":{"type":"header","text":"Lecture 10: Dynamic Programming. Advanced DP","value":"lecture-10-dynamic-programming-advanced-dp","line":614,"column":0,"depth":1},"lecture-11-dynamic-programming-all-pairs-shortest-paths":{"type":"header","text":"Lecture 11. Dynamic Programming. All-Pairs Shortest Paths","value":"lecture-11-dynamic-programming-all-pairs-shortest-paths","line":697,"column":0,"depth":1},"lecture-12-greedy-algorithms-minimum-spanning-tree":{"type":"header","text":"Lecture 12: Greedy Algorithms. Minimum Spanning Tree","value":"lecture-12-greedy-algorithms-minimum-spanning-tree","line":824,"column":0,"depth":1},"lecture-13-incremental-improvement-max-flow-min-cut":{"type":"header","text":"Lecture 13: Incremental Improvement. Max Flow, Min Cut","value":"lecture-13-incremental-improvement-max-flow-min-cut","line":904,"column":0,"depth":1},"flow-network":{"type":"header","text":"Flow network","value":"flow-network","line":908,"column":0,"depth":2},"lecture-14-incremental-improvement-matching":{"type":"header","text":"Lecture 14: Incremental Improvement. Matching","value":"lecture-14-incremental-improvement-matching","line":973,"column":0,"depth":1},"lecture-15-linear-programming-lp-reductions-simplex":{"type":"header","text":"Lecture 15: Linear Programming. LP, reductions, Simplex.","value":"lecture-15-linear-programming-lp-reductions-simplex","line":1012,"column":0,"depth":1},"lecture-16-complexity-p-np-np-completeness-reductions":{"type":"header","text":"Lecture 16. Complexity: P, NP, NP-completeness, Reductions","value":"lecture-16-complexity-p-np-np-completeness-reductions","line":1109,"column":0,"depth":1},"lecture-17-complexity-approximation-algorithms":{"type":"header","text":"Lecture 17. Complexity: Approximation Algorithms","value":"lecture-17-complexity-approximation-algorithms","line":1197,"column":0,"depth":1},"lecture-18-complexity-fixed-parameter-algorithms":{"type":"header","text":"Lecture 18. Complexity: Fixed-Parameter Algorithms","value":"lecture-18-complexity-fixed-parameter-algorithms","line":1261,"column":0,"depth":1},"lecture-19-synchronous-distributed-algorithms-symmetry-breaking-shortest-paths-spanning-trees":{"type":"header","text":"Lecture 19. Synchronous Distributed Algorithms: Symmetry-Breaking. Shortest-Paths Spanning Trees","value":"lecture-19-synchronous-distributed-algorithms-symmetry-breaking-shortest-paths-spanning-trees","line":1331,"column":0,"depth":1},"lecture-20-asynchronous-distributed-algorithms-shortest-paths-spanning-trees":{"type":"header","text":"Lecture 20. Asynchronous Distributed Algorithms: Shortest-Paths Spanning Trees","value":"lecture-20-asynchronous-distributed-algorithms-shortest-paths-spanning-trees","line":1476,"column":0,"depth":1},"lecture-21-cryptography-hash-functions":{"type":"header","text":"Lecture 21. Cryptography: Hash Functions","value":"lecture-21-cryptography-hash-functions","line":1549,"column":0,"depth":1},"lecture-22-cryptography-encryption":{"type":"header","text":"Lecture 22. Cryptography: Encryption","value":"lecture-22-cryptography-encryption","line":1571,"column":0,"depth":1},"lecture-23-cache-oblivious-algorithms-medians--matrices":{"type":"header","text":"Lecture 23. Cache-Oblivious Algorithms: Medians & Matrices","value":"lecture-23-cache-oblivious-algorithms-medians--matrices","line":1641,"column":0,"depth":1},"lecture-24-cache-oblivious-algorithms-searching--sorting":{"type":"header","text":"Lecture 24. Cache-Oblivious Algorithms: Searching & Sorting","value":"lecture-24-cache-oblivious-algorithms-searching--sorting","line":1729,"column":0,"depth":1}},"children":[],"parent":"qqoll92c4irbmy88nn30mwt","data":{}}
