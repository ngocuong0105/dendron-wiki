{"pageProps":{"note":{"id":"bvywezxe342ge7lrslfg9ue","title":"Geometry","desc":"","updated":1689087576910,"created":1664382853125,"custom":{},"fname":"engineering.algorithms.Geometry","type":"note","vault":{"fsPath":"vault"},"contentHash":"1fdf2e955ca48cd1678589aba9c5a20b","links":[],"anchors":{"elementary-operations":{"type":"header","text":"Elementary operations","value":"elementary-operations","line":9,"column":0,"depth":1},"basic-geometry":{"type":"header","text":"Basic Geometry","value":"basic-geometry","line":10,"column":0,"depth":2},"finding-the-equation-of-a-line-for-a-segment":{"type":"header","text":"Finding the equation of a line for a segment","value":"finding-the-equation-of-a-line-for-a-segment","line":25,"column":0,"depth":1},"minimum-enclosing-circle":{"type":"header","text":"Minimum enclosing circle","value":"minimum-enclosing-circle","line":29,"column":0,"depth":1},"polygons":{"type":"header","text":"Polygons","value":"polygons","line":79,"column":0,"depth":1},"check-if-convex-polygon":{"type":"header","text":"Check if convex polygon","value":"check-if-convex-polygon","line":83,"column":0,"depth":2},"sweep-line":{"type":"header","text":"Sweep-line","value":"sweep-line","line":93,"column":0,"depth":1},"search-for-a-pair-of-intersecting-segments":{"type":"header","text":"Search for a pair of intersecting segments","value":"search-for-a-pair-of-intersecting-segments","line":94,"column":0,"depth":2},"point-location-in-olog-n":{"type":"header","text":"Point location in O(log N)","value":"point-location-in-olog-n","line":102,"column":0,"depth":2}},"children":[],"parent":"7m3gais9ll8mlmzqlw08s7g","data":{}},"body":"<h1 id=\"geometry\">Geometry<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#geometry\"></a></h1>\n<h1 id=\"elementary-operations\">Elementary operations<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#elementary-operations\"></a></h1>\n<h2 id=\"basic-geometry\">Basic Geometry<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#basic-geometry\"></a></h2>\n<ul>\n<li>cross product checks for collinearity (line on one line)</li>\n</ul>\n<details>\n<summary> <b>CODE</b> </summary>\n<pre class=\"language-python\"><code class=\"language-Python\"><span class=\"token keyword\">def</span> <span class=\"token function\">collinear</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sm <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        sm <span class=\"token operator\">+=</span> u<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>v<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> sm <span class=\"token operator\">==</span> <span class=\"token number\">0</span>\n</code></pre>\n</details>\n<h1 id=\"finding-the-equation-of-a-line-for-a-segment\">Finding the equation of a line for a segment<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#finding-the-equation-of-a-line-for-a-segment\"></a></h1>\n<ul>\n<li><a href=\"https://leetcode.com/problems/check-if-it-is-a-straight-line/\">leetcode</a>\nvertical lines have infinite slope, to avoid edge cases use above representaion of a line <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>x</mi><mo>+</mo><mi>B</mi><mi>y</mi><mo>+</mo><mi>C</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">Ax+By+C = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></span></li>\n</ul>\n<h1 id=\"minimum-enclosing-circle\">Minimum enclosing circle<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#minimum-enclosing-circle\"></a></h1>\n<p><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span></span>\n<a href=\"https://leetcode.com/problems/erect-the-fence-ii/\">Erect the fence</a></p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">circle_three</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"arr is a list of 3 points\"\"\"</span>\n    <span class=\"token punctuation\">(</span>x0<span class=\"token punctuation\">,</span> y0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> arr\n    A <span class=\"token operator\">=</span> x0<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>y1<span class=\"token operator\">-</span>y2<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> y0<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>x1<span class=\"token operator\">-</span>x2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> x1<span class=\"token operator\">*</span>y2 <span class=\"token operator\">-</span> x2<span class=\"token operator\">*</span>y1\n    B <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x0<span class=\"token operator\">*</span>x0 <span class=\"token operator\">+</span> y0<span class=\"token operator\">*</span>y0<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>y2<span class=\"token operator\">-</span>y1<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>x1<span class=\"token operator\">*</span>x1 <span class=\"token operator\">+</span> y1<span class=\"token operator\">*</span>y1<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>y0<span class=\"token operator\">-</span>y2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>x2<span class=\"token operator\">*</span>x2<span class=\"token operator\">+</span>y2<span class=\"token operator\">*</span>y2<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>y1<span class=\"token operator\">-</span>y0<span class=\"token punctuation\">)</span>\n    C <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x0<span class=\"token operator\">*</span>x0 <span class=\"token operator\">+</span> y0<span class=\"token operator\">*</span>y0<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>x1<span class=\"token operator\">-</span>x2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>x1<span class=\"token operator\">*</span>x1 <span class=\"token operator\">+</span> y1<span class=\"token operator\">*</span>y1<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>x2<span class=\"token operator\">-</span>x0<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>x2<span class=\"token operator\">*</span>x2<span class=\"token operator\">+</span>y2<span class=\"token operator\">*</span>y2<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>x0<span class=\"token operator\">-</span>x1<span class=\"token punctuation\">)</span>\n    D <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x0<span class=\"token operator\">*</span>x0 <span class=\"token operator\">+</span> y0<span class=\"token operator\">*</span>y0<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>x2<span class=\"token operator\">*</span>y1<span class=\"token operator\">-</span>x1<span class=\"token operator\">*</span>y2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>x1<span class=\"token operator\">*</span>x1<span class=\"token operator\">+</span>y1<span class=\"token operator\">*</span>y1<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>x0<span class=\"token operator\">*</span>y2<span class=\"token operator\">-</span>x2<span class=\"token operator\">*</span>y0<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>x2<span class=\"token operator\">*</span>x2<span class=\"token operator\">+</span>y2<span class=\"token operator\">*</span>y2<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>x1<span class=\"token operator\">*</span>y0<span class=\"token operator\">-</span>x0<span class=\"token operator\">*</span>y1<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>B<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>C<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> sqrt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>B<span class=\"token operator\">*</span>B<span class=\"token operator\">+</span>C<span class=\"token operator\">*</span>C<span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token operator\">*</span>A<span class=\"token operator\">*</span>D<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token operator\">*</span>A<span class=\"token operator\">*</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">inside</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"return: is point p inside circle (x,y,r)\"\"\"</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>y<span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">&#x3C;</span> r<span class=\"token operator\">**</span><span class=\"token number\">2</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dist</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>b<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>b<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">0.5</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">mec</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>R<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    Minimum enclosing circle using Welzl’s algorithm\n    R = points which need to be on the boundary\n    return: MEC of all points[:i+1] where points in R are on the boundary\n    \"\"\"</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> circle_three<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span> \n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>dist<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>\n\n    x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>r <span class=\"token operator\">=</span> mec<span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>R<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> inside<span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> mec<span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>R<span class=\"token operator\">+</span><span class=\"token punctuation\">[</span>points<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\npoints <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Result:\"</span><span class=\"token punctuation\">,</span> mec<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code>    Intersection Point of Lines\n    Check if two segments intersect\n    Intersection of Segments\n    Circle-Line Intersection\n    Circle-Circle Intersection\n    Common tangents to two circles\n    Length of the union of segments\n</code></pre>\n<h1 id=\"polygons\">Polygons<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#polygons\"></a></h1>\n<pre><code>    Oriented area of a triangle\n    Area of simple polygon\n    Check if points belong to the convex polygon in O(log N)\n</code></pre>\n<h2 id=\"check-if-convex-polygon\">Check if convex polygon<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#check-if-convex-polygon\"></a></h2>\n<p><a href=\"https://leetcode.com/problems/convex-polygon/\">problem</a></p>\n<ul>\n<li>\n<p>cross product of three points (a,b,c) sign shows the direction of the turn</p>\n<pre><code>  Minkowski sum of convex polygons\n  Pick's Theorem - area of lattice polygons\n  Lattice points of non-lattice polygon\n</code></pre>\n<p>  Convex hull\nConvex hull construction\nConvex hull trick and Li Chao tree</p>\n</li>\n</ul>\n<h1 id=\"sweep-line\">Sweep-line<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#sweep-line\"></a></h1>\n<h2 id=\"search-for-a-pair-of-intersecting-segments\">Search for a pair of intersecting segments<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#search-for-a-pair-of-intersecting-segments\"></a></h2>\n<ul>\n<li>\n<p><a href=\"https://leetcode.com/problems/perfect-rectangle/\">perfect rectangle</a>\nGiven  a list of rectangles we want to find if there is any overlap of two rectangles.</p>\n</li>\n<li>\n<p>Line sweep x-axis and add y1,y2 intervals into a SortedList data structure</p>\n</li>\n</ul>\n<h2 id=\"point-location-in-olog-n\">Point location in O(log N)<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#point-location-in-olog-n\"></a></h2>\n<pre><code>Miscellaneous\n    Finding the nearest pair of points\n    Delaunay triangulation and Voronoi diagram\n    Vertical decomposition\n    Half-plane intersection - S&#x26;I Algorithm in O(N log N)\n</code></pre>","noteIndex":{"id":"wn8PE1RhG0znK1alrGFYv","title":"Root","desc":"","updated":1744237493819,"created":1631901573363,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"ea936af1aea818f3052610daac103a63","links":[],"anchors":{},"children":["dgcsvcwea8scgdegrk9tfni","xig93vo47ou1bkr7s4w1wb2","ro9bbyftsutm88mxw6r16p5","ypia1zmywsklpicmcgrzlz1","w7iitlako61ppm27mym400a","6bx5plramu4hksomqc1n55z","4nki3bedlvs3mnkixj3a07k","9r5ym61dkwap92fvbte1jkq","849u97nrsuyekmr4a1r92ux","2b5bwf46z6v132wu7xghvrp","dygp5h2vzw4mkromwmofynb","7h50s7ga5ziiyblmoctsqmw","pglaolxcge4xfvgoph3je89","uy9u1co5ih1fokind8tg0eq","jc23ggp8iiu92kpnzo721to","f1u2a47guuw70olv36bzf66","c1bs7wsjfbhb0zipaywqv1","2av385tcj2cbumxprsauff3","v77wdzobzcackzimz6a7crv"],"parent":null,"data":{},"body":"\nWelcome to my Knowledge Base! Here I write about my perception of life, document exciting things I've learned, debate (with myself) on controversial topics. If you know me you will not be surprised to find out that I write mostly about engineering and maths. Other topics I'm interested in are economics, politics, business, chess and poker."},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"dendronVersion":"0.95.0","enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false,"templateHierarchy":"template"},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","assetsPrefix":"/dendron-wiki","siteUrl":"https://ngocuong0105.github.io","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"theme":"light","templateVersion":"0.97.0","ga":{"tracking":"G-W5DRRLQ1N7"},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}